/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.DeliveryMan.DeliveryMan;;
import Business.EcoSystem;
import Business.Restaurant.Restaurant;
import Business.Role.AdminRole;
import Business.Role.CustomerRole;
import Business.Role.DeliverManRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author MyPC1
 */
public class SystemAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminWorkAreaJPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAccount;
    public SystemAdminWorkAreaJPanel(JPanel userProcessContainer,EcoSystem ecosystem) {
        initComponents();
        btnUpdateSave.setVisible(false);
        this.userProcessContainer=userProcessContainer;
        this.ecosystem=ecosystem;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboManageType = new javax.swing.JComboBox<>();
        lblTitle = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblUserName = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnUpdateSave = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInfo = new javax.swing.JTable();
        lblTableName = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btCustomerReview = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        comboManageType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manage All Customers", "Manage Restaurants", "Manage Deliveryman" }));
        comboManageType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboManageTypeActionPerformed(evt);
            }
        });
        add(comboManageType, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 480, 30));

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Users");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 590, 30));

        lblName.setText("Name :");
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 130, 20));
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, 150, 30));

        lblUserName.setText("User Name :");
        add(lblUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 130, 20));
        add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 150, 30));

        lblPassword.setText("Password :");
        add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, 130, 20));

        btnSubmit.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, 150, -1));

        btnUpdateSave.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnUpdateSave.setText("Save");
        btnUpdateSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateSaveActionPerformed(evt);
            }
        });
        add(btnUpdateSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, 150, -1));

        tblInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "User Name", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblInfo);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 510, 160));

        lblTableName.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        add(lblTableName, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 300, 510, 30));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 510, 100, -1));

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 510, 90, -1));

        btCustomerReview.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btCustomerReview.setText("View Customer Review");
        btCustomerReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCustomerReviewActionPerformed(evt);
            }
        });
        add(btCustomerReview, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 510, -1, -1));
        add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 200, 150, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void comboManageTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboManageTypeActionPerformed
        // TODO add your handling code here:
        int Selectedindex = comboManageType.getSelectedIndex();
        if(Selectedindex == 0)
        {
            lblName.setText("Customer Name :");
            lblTableName.setText("Customer Info :");
        }
        else if(Selectedindex == 1)
        {
            lblName.setText("Restaurant Name :");
            lblTableName.setText("Restaurant Info :");
        }
        else if(Selectedindex == 2)
        {
            lblName.setText("Delivery Man Name :");
            lblTableName.setText("DeliveryMan Info :");
        }
        if(Selectedindex >= 0)
        {
            populateTable();
        }
    }//GEN-LAST:event_comboManageTypeActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        int Selectedindex = comboManageType.getSelectedIndex();
        String name = txtName.getText();
        String uname=txtUserName.getText();
        String password=jPasswordField1.getText();
        if(txtName.getText().equals("")|| txtUserName.getText().equals("") || jPasswordField1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please Enter all details");
        }
        else
        {
            if(Selectedindex == 0)
            {
                ecosystem.getUserAccountDirectory().createUserAccount(name,uname,password, null, new CustomerRole());
                Customer cust= ecosystem.getCustomerDirectory().createCustomer(name);
            }
            else if(Selectedindex == 1)
            {
                ecosystem.getUserAccountDirectory().createUserAccount(name,uname,password, null, new AdminRole());
                Restaurant restaurant= ecosystem.getRestaurantDirectory().createRestaurantInfo(name);
            }
            else if(Selectedindex == 2)
            {
                ecosystem.getUserAccountDirectory().createUserAccount(name,uname,password, null, new DeliverManRole());
                DeliveryMan deliveryMan= ecosystem.getDeliveryManDirectory().createDeliveryMan(name);
            }
            populateTable();
            txtName.setText("");
            txtUserName.setText("");
            jPasswordField1.setText("");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnUpdateSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateSaveActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText();
        String uname=txtUserName.getText();
        String password=jPasswordField1.getText();
        if(txtName.getText().equals("") || txtUserName.getText().equals("") || jPasswordField1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please Enter all details");
        }
        else
        {
            ecosystem.getUserAccountDirectory().updateUserAccount(userAccount,name,uname,password);
            txtName.setText("");
            txtUserName.setText("");
            jPasswordField1.setText("");
            btnUpdateSave.setVisible(false);
            btnSubmit.setVisible(true);
            txtName.setEnabled(true);
            populateTable();
        }
    }//GEN-LAST:event_btnUpdateSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblInfo.getSelectedRow();
        if(selectedRow>=0){
            btnSubmit.setVisible(false);
            btnUpdateSave.setVisible(true);
            String username= (String)tblInfo.getValueAt(selectedRow, 1);
            String pwd= (String)tblInfo.getValueAt(selectedRow, 2);
            userAccount=ecosystem.getUserAccountDirectory().authenticateUser(username,pwd);
            txtName.setText(userAccount.getName());
            txtUserName.setText(userAccount.getUsername());
            jPasswordField1.setText(userAccount.getPassword());
            txtName.setEnabled(false);
        }
        else {
            JOptionPane.showMessageDialog(null,"Please select a row");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblInfo.getSelectedRow();
        int dropdownSelectedIndex = comboManageType.getSelectedIndex();
        if(selectedRow>=0){
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete??","Warning",selectionButton);
            if(selectionResult == JOptionPane.YES_OPTION){
                String username= (String)tblInfo.getValueAt(selectedRow, 1);
                String pwd= (String)tblInfo.getValueAt(selectedRow, 2);
                UserAccount user=ecosystem.getUserAccountDirectory().authenticateUser(username,pwd);
                ecosystem.getUserAccountDirectory().deleteUserAccount(user);

                if(dropdownSelectedIndex == 0)
                {
                    ecosystem.getCustomerDirectory().deleteCustomer(user.getName());
                }
                else if(dropdownSelectedIndex == 1)
                {
                    ecosystem.getRestaurantDirectory().deleteRestaurant(user.getName());
                }
                else if(dropdownSelectedIndex == 2)
                {
                    ecosystem.getDeliveryManDirectory().deleteDeliveryMan(user.getName());
                }
                populateTable();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btCustomerReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCustomerReviewActionPerformed
        // TODO add your handling code here:
        CustomerReviewJPanel manageCustomerReviewJPanel=new CustomerReviewJPanel(userProcessContainer,ecosystem);
        userProcessContainer.add("Manage Customer Review",manageCustomerReviewJPanel);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btCustomerReviewActionPerformed
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblInfo.getModel();
        model.setRowCount(0);
        int Selectedindex = comboManageType.getSelectedIndex();
        if(Selectedindex == 0)
        {
            for (UserAccount user : ecosystem.getUserAccountDirectory().getUserAccountList()) {
                if ("Business.Role.CustomerRole".equals(user.getRole().getClass().getName())) {
                    Object[] row = new Object[3];
                    row[0] = user.getName();
                    row[1] = user.getUsername();
                    row[2] = user.getPassword();
                    model.addRow(row);
                }
            }    
        }
        else if(Selectedindex == 1)
        {
            for (UserAccount user : ecosystem.getUserAccountDirectory().getUserAccountList()) {
                if ("Business.Role.AdminRole".equals(user.getRole().getClass().getName())) {
                    Object[] row = new Object[3];
                    row[0] = user.getName();
                    row[1] = user.getUsername();
                    row[2] = user.getPassword();
                    model.addRow(row);
                }
            }    
        }
        else if(Selectedindex == 2)
        {
            for (UserAccount user : ecosystem.getUserAccountDirectory().getUserAccountList()) {
                if ("Business.Role.DeliverManRole".equals(user.getRole().getClass().getName())) {
                    Object[] row = new Object[3];
                    row[0] = user.getName();
                    row[1] = user.getUsername();
                    row[2] = user.getPassword();
                    model.addRow(row);
                }
            }    
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCustomerReview;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateSave;
    private javax.swing.JComboBox<String> comboManageType;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblTableName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTable tblInfo;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
