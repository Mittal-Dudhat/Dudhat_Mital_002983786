/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Order.Order;
import Business.Restaurant.Dishes;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dhaval
 */
public class OrderHistory extends javax.swing.JPanel {

    /**
     * Creates new form OrderHistory
     */
    JPanel userProcessContainer;
    UserAccount userAccount;
    EcoSystem ecoSystem;
    
    public OrderHistory(JPanel userProcessContainer,UserAccount userAccount,EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.userAccount = userAccount;
        this.ecoSystem = ecoSystem;
        populateOrderHistoryTable();
        txtComment.setVisible(false);
        btnSubmit.setVisible(false);
    }
    
    private void populateOrderHistoryTable() {
        DefaultTableModel model = (DefaultTableModel)tblOrders.getModel();
        model.setRowCount(0);
        for(Restaurant res : ecoSystem.getRestaurantDirectory().getRestaurantList())
        {  
            for(Order order:res.getOrderList())
            {
                if(order.getCustomerName().equals(userAccount.getName()) && order.getStatus().equals("Delivered"))
                {
                        Object[] row = new Object[4];
                        row[0] = order.getOrderId();
                        row[1] = order.getRestaurantName();
                        row[2] = order.getDeliveryAddress();
                        row[3] = order.getTotalAmount();
                       // row[4] = order.getCustComment();
                        model.addRow(row);
                }
             }   
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnReview = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        txtComment = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "OrderId", "Restaurant Name", "Delivery Address", "Order Amount", "Comment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrders);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 47, 570, 140));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View All Orders");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 570, -1));

        btnReview.setText("Add Comment");
        btnReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReviewActionPerformed(evt);
            }
        });
        add(btnReview, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 200, 140, -1));

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 250, -1, -1));
        add(txtComment, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 420, -1));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 200, 80, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReviewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrders.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to add comment","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            txtComment.setVisible(true);
            btnSubmit.setVisible(true);
        }
    }//GEN-LAST:event_btnReviewActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if(txtComment.getText() != "")
        {
            int selectedRow = tblOrders.getSelectedRow();
            if(selectedRow>=0)
            {
                int OrderId = (int)tblOrders.getValueAt(selectedRow, 0);
                for (Customer customer:ecoSystem.getCustomerDirectory().getCustList())
                {
                    if (customer.getName().equals(userAccount.getName())) 
                    { 
                       
                       for(Order order:customer.getCustomerOrderList())
                       {
                           String Comment = txtComment.getText();
                           //remove comment
                          // customer.updateOrder(order,Comment);
                       }
                    } 
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please add comment","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CustomerAreaJPanel customerPanel = (CustomerAreaJPanel) component;
        customerPanel.populateRequestTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnReview;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOrders;
    private javax.swing.JTextField txtComment;
    // End of variables declaration//GEN-END:variables
}
