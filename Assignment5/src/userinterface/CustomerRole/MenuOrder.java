/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Order.Order;
import Business.Restaurant.Dishes;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dhaval
 */
public class MenuOrder extends javax.swing.JPanel {

    /**
     * Creates new form MenuOrder
     */
    private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
    private UserAccount userAccount;
    Restaurant restaurant;
    ArrayList<Dishes> cartMenuList;
    int totalAmount=0;
    
    public MenuOrder(JPanel userProcessContainer, UserAccount account,EcoSystem ecoSystem,Restaurant restaurant) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.ecoSystem = ecoSystem;
        this.restaurant = restaurant;
        lblName.setText(restaurant.getRestaurantName());
        populateMenuTable();
    }

    public void populateMenuTable(){
        DefaultTableModel model = (DefaultTableModel) tblMenu.getModel();
        model.setRowCount(0);
        Object[] row = new Object[3];
        for(Dishes dish:restaurant.getMenu())
        {
            row[0] = dish.getdishName();
            row[1] = dish.getDescription();
            row[2] = dish.getDishAmount();
            model.addRow(row);
        }  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRestaurantName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAddToCart = new javax.swing.JTable();
        btnRemoveFromCart = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMenu = new javax.swing.JTable();
        btnAddToCart = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtTotalAmount = new javax.swing.JTextField();
        lblContactNo = new javax.swing.JLabel();
        txtContactNo = new javax.swing.JTextField();
        btnOrder = new javax.swing.JButton();
        lblContactNoError = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblRestaurantName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRestaurantName.setText("Restaurant Name : ");
        add(lblRestaurantName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 23, 160, -1));

        tblAddToCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "DishName", "Description", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAddToCart);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 500, 150));

        btnRemoveFromCart.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnRemoveFromCart.setText("Remove From Cart");
        btnRemoveFromCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveFromCartActionPerformed(evt);
            }
        });
        add(btnRemoveFromCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 440, 140, -1));

        tblMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "DishName", "Description", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblMenu);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 500, 150));

        btnAddToCart.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAddToCart.setText("Add To Cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });
        add(btnAddToCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, 100, -1));

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 590, 100, -1));

        lblName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 180, 20));

        lblAddress.setText("Address :");
        add(lblAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 130, 20));
        add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 510, 210, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Total Amount: ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 140, -1));

        txtTotalAmount.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        add(txtTotalAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 440, 170, -1));

        lblContactNo.setText("Contact No :");
        add(lblContactNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 550, 130, 20));

        txtContactNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContactNoKeyReleased(evt);
            }
        });
        add(txtContactNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 550, 210, -1));

        btnOrder.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnOrder.setText("Place Order");
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });
        add(btnOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 550, 120, -1));

        lblContactNoError.setForeground(new java.awt.Color(255, 51, 51));
        add(lblContactNoError, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 570, 210, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMenu.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to add to cart","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            for(Dishes dish :restaurant.getMenu())
            {
                if(dish.getdishName() == (String)tblMenu.getValueAt(selectedRow, 0))
                {
                    if(cartMenuList == null)
                    {
                        cartMenuList = new ArrayList<Dishes>();
                    }
                    cartMenuList.add(dish);
                    populateCartInfo(cartMenuList); 
                }
            }
        }
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void btnRemoveFromCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFromCartActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAddToCart.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to remove details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            for(Dishes item :restaurant.getMenu())
            {
                if(item.getdishName() == (String)tblAddToCart.getValueAt(selectedRow, 0))
                {
                    totalAmount = totalAmount-Integer.parseInt(item.getDishAmount());
                    cartMenuList.remove(selectedRow);
                    DefaultTableModel model = (DefaultTableModel) tblAddToCart.getModel();
                    model.setRowCount(0);
                    Object[] row = new Object[3];
                    for(Dishes dish:cartMenuList)
                    {
                        row[0] = dish.getdishName();
                        row[1] = dish.getDescription();
                        row[2] = dish.getDishAmount();
                        model.addRow(row);
                    }
                    txtTotalAmount.setText(String.valueOf(totalAmount));
                }
            }
        }
    }//GEN-LAST:event_btnRemoveFromCartActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CustomerAreaJPanel customerPanel = (CustomerAreaJPanel) component;
        customerPanel.populateRequestTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        // TODO add your handling code here:
        String address=txtAddress.getText();
        Long ContactNo= Long.parseLong(txtContactNo.getText());
        
        if(txtAddress.getText().equals("") || txtContactNo.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please Enter address and Contact No");
        }
        else if(cartMenuList.size()==0)
        {
            JOptionPane.showMessageDialog(null,"Please add atleast one item to the cart");
        }
        else
        {
            for(Customer cust:ecoSystem.getCustomerDirectory().getCustList()){
                if(userAccount.getName().equals(cust.getName())){
                    cust.addOrder(restaurant.getRestaurantName(), userAccount.getName(), null,cartMenuList, String.valueOf(totalAmount), address,ContactNo);
                    ArrayList<Order> OrderList= cust.getCustomerOrderList();
                    cust.setCustomerOrderList(OrderList);
                }
            } 

            for(Restaurant res:ecoSystem.getRestaurantDirectory().getRestaurantList()){
                if(res.getRestaurantName().equals(restaurant.getRestaurantName())){
                    System.out.println(cartMenuList.size());
                    res.addOrder(res.getRestaurantName(), userAccount.getName(), null, cartMenuList, String.valueOf(totalAmount) , address,ContactNo);
                }
            }

            JOptionPane.showMessageDialog(null,"Order Added Successfully");
            ArrayList<Dishes> MenuList = new ArrayList<Dishes>();
            populateCartInfo(MenuList);
            txtAddress.setText("");
            txtContactNo.setText("");
        }
    }//GEN-LAST:event_btnOrderActionPerformed

    private void txtContactNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactNoKeyReleased
        // TODO add your handling code here:
        if(txtContactNo.getText().trim() != "")
        {
            Pattern pat = Pattern.compile("^[0-9]{10}$");
            Matcher matchPhoneNo= pat.matcher(txtContactNo.getText());
            if(!matchPhoneNo.matches())
            {
               lblContactNoError.setText("Enter Valid Contact No");
            }
            else
            {
                lblContactNoError.setText("");
            }
        }
    }//GEN-LAST:event_txtContactNoKeyReleased

    public void populateCartInfo(ArrayList<Dishes> MenuList){
        totalAmount=0;
        DefaultTableModel model = (DefaultTableModel)tblAddToCart.getModel();
        model.setRowCount(0);
        Object[] row = new Object[3];
        for(Dishes dish:MenuList)
        {
            row[0] = dish.getdishName();
            row[1] = dish.getDescription();
            row[2] = dish.getDishAmount();
            totalAmount = totalAmount + Integer.parseInt(dish.getDishAmount());
            model.addRow(row);
        }
        txtTotalAmount.setText(String.valueOf(totalAmount));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnOrder;
    private javax.swing.JButton btnRemoveFromCart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblContactNo;
    private javax.swing.JLabel lblContactNoError;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblRestaurantName;
    private javax.swing.JTable tblAddToCart;
    private javax.swing.JTable tblMenu;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtContactNo;
    private javax.swing.JTextField txtTotalAmount;
    // End of variables declaration//GEN-END:variables
}
