/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CarModel;
import model.CarModelHistory;

/**
 *
 * @author Dhaval
 */
public class ViewPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPanel
     */
    
    CarModelHistory modelHistory;
    
    public ViewPanel(CarModelHistory modelHistory) {
        initComponents();
        this.modelHistory= modelHistory;
        displayTableInfo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupUber = new javax.swing.ButtonGroup();
        btnGroupAvailable = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        lblManufracturerName = new javax.swing.JLabel();
        txtVehRegNo = new javax.swing.JTextField();
        rdAvailableYes = new javax.swing.JRadioButton();
        lblVehRegNo = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        rdAvailableNo = new javax.swing.JRadioButton();
        lblManufracturerName2 = new javax.swing.JLabel();
        txtSeats = new javax.swing.JTextField();
        lblNoOfSeats = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        lblCity2 = new javax.swing.JLabel();
        lblCity3 = new javax.swing.JLabel();
        lblCity4 = new javax.swing.JLabel();
        dateChooserCertificate = new com.toedter.calendar.JDateChooser();
        txtModelNo = new javax.swing.JTextField();
        lblModelNo = new javax.swing.JLabel();
        txtManufacturerName = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarModels = new javax.swing.JTable();
        chkUsedByUber = new javax.swing.JCheckBox();
        lblVehicleRegNoError = new javax.swing.JLabel();
        lblYearError = new javax.swing.JLabel();
        lblNoOfSeatsError = new javax.swing.JLabel();

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View/Update Car Models");
        lblTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblManufracturerName.setText("Manufacturer Name:");

        btnGroupAvailable.add(rdAvailableYes);
        rdAvailableYes.setText("Yes");

        lblVehRegNo.setText("Vehicle Registration No:");

        txtYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtYearKeyReleased(evt);
            }
        });

        btnGroupAvailable.add(rdAvailableNo);
        rdAvailableNo.setText("No");

        lblManufracturerName2.setText("Manufactured Year :");

        txtSeats.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSeatsKeyReleased(evt);
            }
        });

        lblNoOfSeats.setText("No Of Seats:");

        lblCity.setText("Available in City:");

        lblCity2.setText("Certificate Date:");

        lblCity3.setText("Used By Uber:");

        lblCity4.setText("Currently Available:");

        lblModelNo.setText("Model No:");

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        tblCarModels.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Model No", "Registration No", "Manufacturer", "City", "Manufacturing Year", "No Of Seats", "Uber Affiliated", "Certificate Date", "Currently Available", "Updated Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCarModels);

        javax.swing.GroupLayout TablePanelLayout = new javax.swing.GroupLayout(TablePanel);
        TablePanel.setLayout(TablePanelLayout);
        TablePanelLayout.setHorizontalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
        );
        TablePanelLayout.setVerticalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(TablePanel);

        lblVehicleRegNoError.setForeground(new java.awt.Color(255, 51, 51));

        lblYearError.setForeground(new java.awt.Color(255, 51, 51));

        lblNoOfSeatsError.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnView)
                .addGap(84, 84, 84))
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCity4)
                    .addComponent(lblCity3)
                    .addComponent(lblCity2)
                    .addComponent(lblCity)
                    .addComponent(lblNoOfSeats)
                    .addComponent(lblManufracturerName2)
                    .addComponent(lblVehRegNo)
                    .addComponent(lblManufracturerName)
                    .addComponent(lblModelNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtModelNo)
                            .addComponent(txtManufacturerName)
                            .addComponent(txtVehRegNo)
                            .addComponent(txtYear)
                            .addComponent(txtSeats)
                            .addComponent(txtCity)
                            .addComponent(dateChooserCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblVehicleRegNoError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblYearError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNoOfSeatsError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdAvailableYes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdAvailableNo))
                            .addComponent(chkUsedByUber))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModelNo)
                    .addComponent(txtModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManufracturerName)
                    .addComponent(txtManufacturerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVehRegNo)
                    .addComponent(txtVehRegNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblVehicleRegNoError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManufracturerName2)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblYearError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNoOfSeats)
                    .addComponent(txtSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNoOfSeatsError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCity2)
                    .addComponent(dateChooserCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity3)
                    .addComponent(chkUsedByUber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rdAvailableYes)
                        .addComponent(rdAvailableNo))
                    .addComponent(lblCity4))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblCarModels.getSelectedRow();
        if(selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this,"Please select row to Update");
        }
        else
        {
            //DefaultTableModel model=(DefaultTableModel) tblCarModels.getModel();
            //CarModel selectedCar=(CarModel)model.getValueAt(selectedRowIndex,0);
            try{
                CarModel selectedCar=modelHistory.getCarHistory().get(selectedRowIndex);
                txtModelNo.setText(selectedCar.getModelNo());
                txtManufacturerName.setText(selectedCar.getManufracturer());
                txtVehRegNo.setText(selectedCar.getVehRegNo());
                txtYear.setText(String.valueOf(selectedCar.getYear()));
                txtSeats.setText(String.valueOf(selectedCar.getNoOfSeats()));
                txtCity.setText(selectedCar.getCity());
                Date date = new SimpleDateFormat("MM-dd-yyy").parse(selectedCar.getMaintainanceCertificateDate());
                dateChooserCertificate.setDate(date);
                if(selectedCar.isIsUsedByUber())
                {
                    chkUsedByUber.setSelected(true);
                }
                if(selectedCar.isIsAvailable())
                {
                    rdAvailableYes.setSelected(true);
                }
                else
                {
                    rdAvailableNo.setSelected(true);
                }
                btnSave.setVisible(true);
            }
            catch(ParseException ex)
            {
                JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        btnSave.setVisible(false);
        int selectedRowIndex = tblCarModels.getSelectedRow();
        if(selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(this,"Please select row to View");
        }
        else
        {
            try{
                CarModel selectedCar=modelHistory.getCarHistory().get(selectedRowIndex);
                txtModelNo.setText(selectedCar.getModelNo());
                txtManufacturerName.setText(selectedCar.getManufracturer());
                txtVehRegNo.setText(selectedCar.getVehRegNo());
                txtYear.setText(String.valueOf(selectedCar.getYear()));
                txtSeats.setText(String.valueOf(selectedCar.getNoOfSeats()));
                txtCity.setText(selectedCar.getCity());
                Date date = new SimpleDateFormat("MM-dd-yyy").parse(selectedCar.getMaintainanceCertificateDate());
                dateChooserCertificate.setDate(date);
                if(selectedCar.isIsUsedByUber())
                {
                    chkUsedByUber.setSelected(true);
                }
                if(selectedCar.isIsAvailable())
                {
                    rdAvailableYes.setSelected(true);
                }
                else
                {
                    rdAvailableNo.setSelected(true);
                }
                txtModelNo.setEditable(false);
            }
            catch(ParseException ex)
            {
                JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        }
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(txtModelNo.getText().trim() != "" && txtManufacturerName.getText().trim() != "" && txtVehRegNo.getText().trim() != "" && txtYear.getText().trim()!= "" && txtSeats.getText().trim()!="" && txtCity.getText().trim()!="" && dateChooserCertificate.getDate()!=null)
        {
            int selectedRowIndex = tblCarModels.getSelectedRow();
            CarModel cm=modelHistory.getCarHistory().get(selectedRowIndex);
            cm.setModelNo(txtModelNo.getText());
            cm.setManufracturer(txtManufacturerName.getText());
            cm.setVehRegNo(txtVehRegNo.getText());
            cm.setYear(Integer.parseInt(txtYear.getText()));
            cm.setNoOfSeats(Integer.parseInt(txtSeats.getText()));
            cm.setCity(txtCity.getText());
            SimpleDateFormat df =new SimpleDateFormat("MM-dd-yyy",Locale.getDefault());
            cm.setMaintainanceCertificateDate(df.format(dateChooserCertificate.getDate()));
            if(chkUsedByUber.isSelected())
            {
                cm.setIsUsedByUber(true);
            }
            else
            {
                cm.setIsUsedByUber(true);
            }
            if(btnGroupAvailable.getSelection().getActionCommand() == "Yes")
            {
                cm.setIsAvailable(true);
            }
            else
            {
                cm.setIsAvailable(false);
            }
            LocalDateTime updatedDate = LocalDateTime.now();
            cm.setUpdatedDate(updatedDate);
            modelHistory.setUpdatedDate(updatedDate);
            JOptionPane.showMessageDialog(this,"Car Model Updated Successfully");

            txtModelNo.setText("");
            txtManufacturerName.setText("");
            txtVehRegNo.setText("");
            txtYear.setText("");    
            txtSeats.setText(""); 
            txtCity.setText("");
            dateChooserCertificate.setDate(null);
            chkUsedByUber.setSelected(false);
            btnGroupAvailable.clearSelection();
            displayTableInfo();      
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Please Fill all details");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtYearKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtYearKeyReleased
        // TODO add your handling code here:
        if(txtYear.getText().trim() != "")
        {
            Pattern pat = Pattern.compile("^\\d{4}$");
            Matcher matchName= pat.matcher(txtYear.getText());
            if(!matchName.matches())
            {
               lblYearError.setText("Enter Valid Year");
            }
            else
            {
                lblYearError.setText(null);
            }
        }     
    }//GEN-LAST:event_txtYearKeyReleased

    private void txtSeatsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSeatsKeyReleased
        // TODO add your handling code here:
        if(txtSeats.getText().trim() != "")
        {
            Pattern pat = Pattern.compile("^\\s*-?[0-9]{1,3}\\s*$");
            Matcher matchName= pat.matcher(txtSeats.getText());
            if(!matchName.matches())
            {
               lblNoOfSeatsError.setText("Enter Valid No Of seats");
            }
            else
            {
                lblNoOfSeatsError.setText(null);
            }
        }  
    }//GEN-LAST:event_txtSeatsKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel TablePanel;
    private javax.swing.ButtonGroup btnGroupAvailable;
    private javax.swing.ButtonGroup btnGroupUber;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JCheckBox chkUsedByUber;
    private com.toedter.calendar.JDateChooser dateChooserCertificate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCity2;
    private javax.swing.JLabel lblCity3;
    private javax.swing.JLabel lblCity4;
    private javax.swing.JLabel lblManufracturerName;
    private javax.swing.JLabel lblManufracturerName2;
    private javax.swing.JLabel lblModelNo;
    private javax.swing.JLabel lblNoOfSeats;
    private javax.swing.JLabel lblNoOfSeatsError;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblVehRegNo;
    private javax.swing.JLabel lblVehicleRegNoError;
    private javax.swing.JLabel lblYearError;
    private javax.swing.JRadioButton rdAvailableNo;
    private javax.swing.JRadioButton rdAvailableYes;
    private javax.swing.JTable tblCarModels;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtManufacturerName;
    private javax.swing.JTextField txtModelNo;
    private javax.swing.JTextField txtSeats;
    private javax.swing.JTextField txtVehRegNo;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables

    private void displayTableInfo() {
        btnSave.setVisible(false);
        DefaultTableModel model=(DefaultTableModel) tblCarModels.getModel();
        model.setRowCount(0);
        for(CarModel cm : modelHistory.getCarHistory()){
            Object[] row =new Object[10];
            row[0]=cm.getModelNo();
            row[1]=cm.getVehRegNo();
            row[2]=cm.getManufracturer();
            row[3]=cm.getCity(); 
            row[4]=cm.getYear(); 
            row[5]=cm.getNoOfSeats(); 
            row[6]=cm.isIsUsedByUber() ? "Yes" : "No"; 
            row[7]=cm.getMaintainanceCertificateDate(); 
            row[8]=cm.isIsAvailable()? "Yes" : "No";
            row[9]=cm.getUpdatedDate();
            model.addRow(row);
        }
    }
}
