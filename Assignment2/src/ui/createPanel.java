/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import com.toedter.calendar.JTextFieldDateEditor;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.CarModel;
import model.CarModelHistory;

/**
 *
 * @author Dhaval
 */
public class createPanel extends javax.swing.JPanel {

    /**
     * Creates new form createPanel
     */
    CarModelHistory carHistory;
    boolean chkuberClicked=false;
    boolean uberRadioBtnClicked=false;
    boolean carAvailableYesButtonClicked=false;
    boolean carAvailabilityRadioBtnClicked=false;
    public createPanel(CarModelHistory carHistory) {
        initComponents();
        this.carHistory = carHistory; 
        JTextFieldDateEditor editor = (JTextFieldDateEditor) dateChooserCertificate.getDateEditor();
        editor.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupUber = new javax.swing.ButtonGroup();
        btnGroupAvailability = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        lblModelNo = new javax.swing.JLabel();
        lblManufracturerName = new javax.swing.JLabel();
        lblVehRegNo = new javax.swing.JLabel();
        lblManufracturerName2 = new javax.swing.JLabel();
        lblNoOfSeats = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblCity2 = new javax.swing.JLabel();
        lblCity3 = new javax.swing.JLabel();
        lblCity4 = new javax.swing.JLabel();
        txtModelNo = new javax.swing.JTextField();
        txtManufacturerName = new javax.swing.JTextField();
        txtVehRegNo = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        txtSeats = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        dateChooserCertificate = new com.toedter.calendar.JDateChooser();
        rdAvailableYes = new javax.swing.JRadioButton();
        rdAvailableNo = new javax.swing.JRadioButton();
        btnSave = new javax.swing.JButton();
        btnFileUpload = new javax.swing.JButton();
        lbluploadFile = new javax.swing.JLabel();
        lblTitle1 = new javax.swing.JLabel();
        lblVehicleRegNoError = new javax.swing.JLabel();
        lblYearError = new javax.swing.JLabel();
        lblNoOfSeatsError = new javax.swing.JLabel();
        lblUsedByUberError = new javax.swing.JLabel();
        lblAvailablityError = new javax.swing.JLabel();
        lblPageTitle = new javax.swing.JLabel();
        chkUsedByUber = new javax.swing.JCheckBox();

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTitle.setText("Upload Car Models");
        lblTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblModelNo.setText("Model No:");

        lblManufracturerName.setText("Manufacturer Name:");

        lblVehRegNo.setText("Vehicle Registration No:");

        lblManufracturerName2.setText("Manufactured Year :");

        lblNoOfSeats.setText("No Of Seats:");

        lblCity.setText("Available in City:");

        lblCity2.setText("Certificate Date:");

        lblCity3.setText("Used By Uber:");

        lblCity4.setText("Currently Available:");

        txtModelNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtModelNoKeyReleased(evt);
            }
        });

        txtVehRegNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtVehRegNoKeyReleased(evt);
            }
        });

        txtYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtYearKeyReleased(evt);
            }
        });

        txtSeats.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSeatsKeyReleased(evt);
            }
        });

        btnGroupAvailability.add(rdAvailableYes);
        rdAvailableYes.setText("Yes");
        rdAvailableYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdAvailableYesActionPerformed(evt);
            }
        });

        btnGroupAvailability.add(rdAvailableNo);
        rdAvailableNo.setText("No");
        rdAvailableNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdAvailableNoActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnFileUpload.setText("Upload File");
        btnFileUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileUploadActionPerformed(evt);
            }
        });

        lbluploadFile.setText("Upload Car Models :");

        lblTitle1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTitle1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTitle1.setText("Create Car Model");
        lblTitle1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblVehicleRegNoError.setForeground(new java.awt.Color(255, 51, 51));

        lblYearError.setForeground(new java.awt.Color(255, 51, 51));

        lblNoOfSeatsError.setForeground(new java.awt.Color(255, 51, 51));

        lblPageTitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPageTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPageTitle.setText("Create/ Upload Car Model");

        chkUsedByUber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkUsedByUberActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCity3)
                    .addComponent(lblCity2)
                    .addComponent(lblCity)
                    .addComponent(lblNoOfSeats)
                    .addComponent(lblManufracturerName2)
                    .addComponent(lblVehRegNo)
                    .addComponent(lblManufracturerName)
                    .addComponent(lblModelNo)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lbluploadFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblCity4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtModelNo)
                            .addComponent(txtManufacturerName)
                            .addComponent(txtVehRegNo)
                            .addComponent(txtYear)
                            .addComponent(txtSeats)
                            .addComponent(txtCity)
                            .addComponent(dateChooserCertificate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdAvailableYes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdAvailableNo))
                            .addComponent(btnFileUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblVehicleRegNoError, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblYearError, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNoOfSeatsError, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(chkUsedByUber))
                .addContainerGap(18, Short.MAX_VALUE))
            .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblTitle1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUsedByUberError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAvailablityError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(lblPageTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPageTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblModelNo)
                            .addComponent(txtModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManufracturerName)
                            .addComponent(txtManufacturerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblVehRegNo)
                                .addComponent(txtVehRegNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblVehicleRegNoError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblManufracturerName2)
                                .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblYearError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNoOfSeats)
                            .addComponent(txtSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblNoOfSeatsError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCity2)
                    .addComponent(dateChooserCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity3)
                    .addComponent(chkUsedByUber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity4)
                    .addComponent(rdAvailableYes)
                    .addComponent(rdAvailableNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSave)
                .addGap(11, 11, 11)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFileUpload)
                    .addComponent(lbluploadFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUsedByUberError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(724, 724, 724)
                .addComponent(lblAvailablityError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(txtModelNo.getText().trim() != "" && txtManufacturerName.getText().trim() != "" && txtVehRegNo.getText().trim() != "" && txtYear.getText().trim()!= "" && txtSeats.getText().trim()!="" && txtCity.getText().trim()!="" && dateChooserCertificate.getDate()!=null)
        {
            if(lblNoOfSeatsError.getText()== null && lblYearError.getText() == null)
            {
                ArrayList<CarModel> carModelHistory = carHistory.getCarHistory();
                List<CarModel> carModelList =carModelHistory.stream().filter(a -> a.getVehRegNo().contains(txtVehRegNo.getText().trim())).collect(Collectors.toList());
                if(carModelList.size() > 0)
                {
                    lblVehicleRegNoError.setText("Duplicate Registration No");
                }
                else{
                    String modelNo=txtModelNo.getText();
                    String manufacturerName=txtManufacturerName.getText();
                    String vehicleRegNo=txtVehRegNo.getText();
                    int manufacturedYear=Integer.parseInt(txtYear.getText());
                    int noOfSeats=Integer.parseInt(txtSeats.getText());
                    String availableCity=txtCity.getText();
                    SimpleDateFormat df =new SimpleDateFormat("MM-dd-yyy",Locale.getDefault());
                    String certificateDate=df.format(dateChooserCertificate.getDate());
                    boolean isUsedByUber = chkuberClicked;
                    boolean isCurrentlyAvailable = carAvailableYesButtonClicked;

                    CarModel cm=carHistory.addNewCar();
                    cm.setModelNo(modelNo);
                    cm.setManufracturer(manufacturerName);
                    cm.setVehRegNo(vehicleRegNo);
                    cm.setYear(manufacturedYear);
                    cm.setNoOfSeats(noOfSeats);
                    cm.setCity(availableCity);
                    //cm.setCatalogDate(catalogDate);
                    cm.setMaintainanceCertificateDate(certificateDate);
                    cm.setIsUsedByUber(isUsedByUber);
                    cm.setIsAvailable(isCurrentlyAvailable);
                    LocalDateTime updatedDate = LocalDateTime.now();
                    cm.setUpdatedDate(updatedDate);
                    carHistory.setUpdatedDate(updatedDate);
                    JOptionPane.showMessageDialog(this,"New Car Model Added");

                    txtModelNo.setText("");
                    txtManufacturerName.setText("");
                    txtVehRegNo.setText("");
                    txtYear.setText("");    
                    txtSeats.setText(""); 
                    txtCity.setText("");
                    dateChooserCertificate.setDate(null);
                    chkUsedByUber.setSelected(false);
                    btnGroupAvailability.clearSelection();
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Please Fill all details");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void rdAvailableYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdAvailableYesActionPerformed
        // TODO add your handling code here:
        carAvailableYesButtonClicked=true;
        carAvailabilityRadioBtnClicked=true;
    }//GEN-LAST:event_rdAvailableYesActionPerformed

    private void rdAvailableNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdAvailableNoActionPerformed
        // TODO add your handling code here:
        carAvailableYesButtonClicked=false;
        carAvailabilityRadioBtnClicked=true;
    }//GEN-LAST:event_rdAvailableNoActionPerformed

    private void btnFileUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileUploadActionPerformed
        // TODO add your handling code here:
        JFileChooser filechooser = new JFileChooser();
        
        int showOpenDialog = filechooser.showOpenDialog(null);
        if(showOpenDialog == JFileChooser.APPROVE_OPTION)
        {
            File selectedImageFile = filechooser.getSelectedFile();
            Path FilePath = Paths.get(selectedImageFile.getAbsolutePath());
            try(BufferedReader br = Files.newBufferedReader(FilePath,StandardCharsets.US_ASCII))
            {
                String data = br.readLine();
                while(data != null)
                {
                    String[] CarData = data.split(",");
                    CarModel cm=carHistory.addNewCar();
                    cm.setModelNo(CarData[0]);
                    cm.setManufracturer(CarData[1]);
                    cm.setVehRegNo(CarData[2]);
                    cm.setYear(Integer.parseInt(CarData[3]));
                    cm.setNoOfSeats(Integer.parseInt(CarData[4]));
                    cm.setCity(CarData[5]);
                    cm.setMaintainanceCertificateDate(CarData[6]);
                    cm.setIsUsedByUber(Boolean.parseBoolean(CarData[7]));
                    cm.setIsAvailable(Boolean.parseBoolean(CarData[8]));
                    LocalDateTime updatedDate = LocalDateTime.now();
                    cm.setUpdatedDate(updatedDate);
                    
                    data = br.readLine();
                    JOptionPane.showMessageDialog(this,"New Car Models Added");
                }
                
            }catch(IOException ioe)
            {
                JOptionPane.showMessageDialog(this,ioe.getMessage());
            }
            //JOptionPane.showMessageDialog(null,"File Selected :" + photoFileName );
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Please select file to upload");
        }
    }//GEN-LAST:event_btnFileUploadActionPerformed

    private void chkUsedByUberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkUsedByUberActionPerformed
        // TODO add your handling code here:
        if (chkUsedByUber.isSelected()) {
            chkuberClicked = true;
        }
    }//GEN-LAST:event_chkUsedByUberActionPerformed

    private void txtSeatsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSeatsKeyReleased
        // TODO add your handling code here:
        if(txtSeats.getText().trim() != "")
        {
            Pattern pat = Pattern.compile("^\\s*-?[0-9]{1,3}\\s*$");
            Matcher matchName= pat.matcher(txtSeats.getText());
            if(!matchName.matches())
            {
               lblNoOfSeatsError.setText("Enter Valid No Of seats");
            }
            else
            {
                lblNoOfSeatsError.setText(null);
            }
        }             
    }//GEN-LAST:event_txtSeatsKeyReleased

    private void txtYearKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtYearKeyReleased
        // TODO add your handling code here:
        if(txtYear.getText().trim() != "")
        {
            Pattern pat = Pattern.compile("^\\d{4}$");
            Matcher matchName= pat.matcher(txtYear.getText());
            if(!matchName.matches())
            {
               lblYearError.setText("Enter Valid Year");
            }
            else
            {
                lblYearError.setText(null);
            }
        }        
    }//GEN-LAST:event_txtYearKeyReleased

    private void txtModelNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtModelNoKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtModelNoKeyReleased

    private void txtVehRegNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVehRegNoKeyReleased
        // TODO add your handling code here:
        lblVehicleRegNoError.setText(null);
    }//GEN-LAST:event_txtVehRegNoKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFileUpload;
    private javax.swing.ButtonGroup btnGroupAvailability;
    private javax.swing.ButtonGroup btnGroupUber;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox chkUsedByUber;
    private com.toedter.calendar.JDateChooser dateChooserCertificate;
    private javax.swing.JLabel lblAvailablityError;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCity2;
    private javax.swing.JLabel lblCity3;
    private javax.swing.JLabel lblCity4;
    private javax.swing.JLabel lblManufracturerName;
    private javax.swing.JLabel lblManufracturerName2;
    private javax.swing.JLabel lblModelNo;
    private javax.swing.JLabel lblNoOfSeats;
    private javax.swing.JLabel lblNoOfSeatsError;
    private javax.swing.JLabel lblPageTitle;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblUsedByUberError;
    private javax.swing.JLabel lblVehRegNo;
    private javax.swing.JLabel lblVehicleRegNoError;
    private javax.swing.JLabel lblYearError;
    private javax.swing.JLabel lbluploadFile;
    private javax.swing.JRadioButton rdAvailableNo;
    private javax.swing.JRadioButton rdAvailableYes;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtManufacturerName;
    private javax.swing.JTextField txtModelNo;
    private javax.swing.JTextField txtSeats;
    private javax.swing.JTextField txtVehRegNo;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
